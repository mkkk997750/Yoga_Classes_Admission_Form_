{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUKESH KUMAR SHAH\\\\Downloads\\\\assignment_flexmoney\\\\client\\\\src\\\\components\\\\Payment.js\";\n// Payment.js: This is the React component for the payment form\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport validator from 'validator';\nlet isValid = true;\nconst Payment = () => {\n  // Define the state variables for the user input and validation\n  const [method, setMethod] = useState('');\n  const [amount, setAmount] = useState(500);\n  const [errors, setErrors] = useState({});\n\n  // Define the state variable for the card details\n  const [card, setCard] = useState({\n    number: '',\n    exp_month: '',\n    exp_year: '',\n    cvc: ''\n  });\n\n  // Define the state variable for the API response\n  const [response, setResponse] = useState(null);\n\n  // Get the history object from React Router\n  const history = useNavigate();\n  // Define a function to handle the form submission\n  const handleSubmit = e => {\n    // Prevent the default browser behavior\n    e.preventDefault();\n\n    // Clear any previous errors\n    setErrors({});\n\n    // Validate the user input\n    if (!method) {\n      setErrors(prev => ({\n        ...prev,\n        method: 'Please select a payment method'\n      }));\n      isValid = false;\n    }\n    if (!amount) {\n      setErrors(prev => ({\n        ...prev,\n        amount: 'Please enter the payment amount'\n      }));\n      isValid = false;\n    } else if (amount !== 500) {\n      setErrors(prev => ({\n        ...prev,\n        amount: 'Invalid payment amount'\n      }));\n      isValid = false;\n    }\n\n    // Validate the card details if the method is card\n    if (method === 'card') {\n      // You can use validator or any other module to validate the input\n      // For example, validator.isCreditCard(card.number)\n      // Check if the card number is a valid credit card number\n      if (!validator.isCreditCard(card.number)) {\n        // Set the error state for the card number\n        setErrors(prev => ({\n          ...prev,\n          number: 'Invalid card number'\n        }));\n        // Set the validity flag to false\n        isValid = false;\n      }\n      // Check if the expiry month is a valid month number\n      if (!validator.isInt(card.exp_month, {\n        min: 1,\n        max: 12\n      })) {\n        // Set the error state for the expiry month\n        setErrors(prev => ({\n          ...prev,\n          exp_month: 'Invalid expiry month'\n        }));\n        // Set the validity flag to false\n        isValid = false;\n      }\n      // Check if the expiry year is a valid year number\n      if (!validator.isInt(card.exp_year, {\n        min: 2021,\n        max: 2030\n      })) {\n        // Set the error state for the expiry year\n        setErrors(prev => ({\n          ...prev,\n          exp_year: 'Invalid expiry year'\n        }));\n        // Set the validity flag to false\n        isValid = false;\n      }\n      // Check if the cvc is a valid cvc number\n      if (!validator.isInt(card.cvc, {\n        min: 100,\n        max: 999\n      })) {\n        // Set the error state for the cvc\n        setErrors(prev => ({\n          ...prev,\n          cvc: 'Invalid cvc'\n        }));\n        // Set the validity flag to false\n        isValid = false;\n      }\n    }\n\n    // If the input is valid, make the API request\n    if (isValid) {\n      // Get the user's token from the local storage\n      const token = localStorage.getItem('token');\n\n      // Get the payment details based on the method\n      let details;\n      if (method === 'card') {\n        details = card;\n      }\n      axios.post('/api/pay', {\n        token,\n        method,\n        amount,\n        details\n      }).then(res => {\n        // Set the response state\n        setResponse(res.data);\n      }).catch(err => {\n        // Set the error state\n        setErrors(err.response.data);\n      });\n    }\n  };\n\n  // Use the useEffect hook to handle the API response\n  useEffect(() => {\n    // If the response is successful, redirect to the home page\n    if (response) {\n      history.push('/');\n    }\n  }, [response, history]);\n\n  // Payment.js: This is the React component for the payment form\n\n  // ...\n\n  // Define the function to handle the card input change\n  const handleCardChange = e => {\n    // Update the card state with the user input\n    setCard(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n\n    // Validate the card input and show any errors\n    // You can use validator or any other module to validate the input\n    // For example, validator.isCreditCard(card.number)\n    // Check if the card number is a valid credit card number\n    if (!validator.isCreditCard(card.number)) {\n      // Set the error state for the card number\n      setErrors(prev => ({\n        ...prev,\n        number: 'Invalid card number'\n      }));\n      // Set the validity flag to false\n      isValid = false;\n    }\n    // Check if the expiry month is a valid month number\n    if (!validator.isInt(card.exp_month, {\n      min: 1,\n      max: 12\n    })) {\n      // Set the error state for the expiry month\n      setErrors(prev => ({\n        ...prev,\n        exp_month: 'Invalid expiry month'\n      }));\n      // Set the validity flag to false\n      isValid = false;\n    }\n    // Check if the expiry year is a valid year number\n    if (!validator.isInt(card.exp_year, {\n      min: 2021,\n      max: 2030\n    })) {\n      // Set the error state for the expiry year\n      setErrors(prev => ({\n        ...prev,\n        exp_year: 'Invalid expiry year'\n      }));\n      // Set the validity flag to false\n      isValid = false;\n    }\n    // Check if the cvc is a valid cvc number\n    if (!validator.isInt(card.cvc, {\n      min: 100,\n      max: 999\n    })) {\n      // Set the error state for the cvc\n      setErrors(prev => ({\n        ...prev,\n        cvc: 'Invalid cvc'\n      }));\n      // Set the validity flag to false\n      isValid = false;\n    }\n  };\n\n  // ...\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, \"Payment\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"method\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, \"Payment Method\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"method\",\n    value: method,\n    onChange: e => setMethod(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, \"Select a payment method\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, \"Card\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"paypal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"Paypal\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"upi\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, \"UPI\")), errors.method && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }, errors.method)), method === 'card' &&\n  /*#__PURE__*/\n  // If the user selects card, show the card input fields\n  React.createElement(\"div\", {\n    className: \"card-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"Card Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"number\",\n    name: \"number\",\n    value: card.number,\n    onChange: handleCardChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }), errors.number && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, errors.number)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exp_month\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, \"Expiry Month\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"exp_month\",\n    name: \"exp_month\",\n    value: card.exp_month,\n    onChange: handleCardChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }), errors.exp_month && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, errors.exp_month)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exp_year\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, \"Expiry Year\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"exp_year\",\n    name: \"exp_year\",\n    value: card.exp_year,\n    onChange: handleCardChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }), errors.exp_year && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, errors.exp_year)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cvc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, \"CVC\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"cvc\",\n    name: \"cvc\",\n    value: card.cvc,\n    onChange: handleCardChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }), errors.cvc && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 30\n    }\n  }, errors.cvc))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, \"Payment Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"amount\",\n    value: amount,\n    onChange: e => setAmount(e.target.value),\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }), errors.amount && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }, errors.amount)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, \"Pay\"))));\n};\nexport default Payment;","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","validator","isValid","Payment","method","setMethod","amount","setAmount","errors","setErrors","card","setCard","number","exp_month","exp_year","cvc","response","setResponse","history","handleSubmit","e","preventDefault","prev","isCreditCard","isInt","min","max","token","localStorage","getItem","details","post","then","res","data","catch","err","push","handleCardChange","target","name","value","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","type","readOnly"],"sources":["C:/Users/MUKESH KUMAR SHAH/Downloads/assignment_flexmoney/client/src/components/Payment.js"],"sourcesContent":["// Payment.js: This is the React component for the payment form\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport validator from 'validator';\r\n\r\nlet isValid=true;\r\n\r\nconst Payment = () => {\r\n  // Define the state variables for the user input and validation\r\n  const [method, setMethod] = useState('');\r\n  const [amount, setAmount] = useState(500);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // Define the state variable for the card details\r\n  const [card, setCard] = useState({\r\n    number: '',\r\n    exp_month: '',\r\n    exp_year: '',\r\n    cvc: ''\r\n  });\r\n\r\n  // Define the state variable for the API response\r\n  const [response, setResponse] = useState(null);\r\n\r\n  // Get the history object from React Router\r\n  const history = useNavigate();\r\n  // Define a function to handle the form submission\r\n  const handleSubmit = (e) => {\r\n    // Prevent the default browser behavior\r\n    e.preventDefault();\r\n\r\n    // Clear any previous errors\r\n    setErrors({});\r\n\r\n    // Validate the user input\r\n    if (!method) {\r\n      setErrors((prev) => ({ ...prev, method: 'Please select a payment method' }));\r\n      isValid = false;\r\n    }\r\n    if (!amount) {\r\n      setErrors((prev) => ({ ...prev, amount: 'Please enter the payment amount' }));\r\n      isValid = false;\r\n    } else if (amount !== 500) {\r\n      setErrors((prev) => ({ ...prev, amount: 'Invalid payment amount' }));\r\n      isValid = false;\r\n    }\r\n\r\n    // Validate the card details if the method is card\r\n    if (method === 'card') {\r\n      // You can use validator or any other module to validate the input\r\n      // For example, validator.isCreditCard(card.number)\r\n      // Check if the card number is a valid credit card number\r\n      if (!validator.isCreditCard(card.number)) {\r\n        // Set the error state for the card number\r\n        setErrors((prev) => ({ ...prev, number: 'Invalid card number' }));\r\n        // Set the validity flag to false\r\n        isValid = false;\r\n      }\r\n      // Check if the expiry month is a valid month number\r\n      if (!validator.isInt(card.exp_month, { min: 1, max: 12 })) {\r\n        // Set the error state for the expiry month\r\n        setErrors((prev) => ({ ...prev, exp_month: 'Invalid expiry month' }));\r\n        // Set the validity flag to false\r\n        isValid = false;\r\n      }\r\n      // Check if the expiry year is a valid year number\r\n      if (!validator.isInt(card.exp_year, { min: 2021, max: 2030 })) {\r\n        // Set the error state for the expiry year\r\n        setErrors((prev) => ({ ...prev, exp_year: 'Invalid expiry year' }));\r\n        // Set the validity flag to false\r\n        isValid = false;\r\n      }\r\n      // Check if the cvc is a valid cvc number\r\n      if (!validator.isInt(card.cvc, { min: 100, max: 999 })) {\r\n        // Set the error state for the cvc\r\n        setErrors((prev) => ({ ...prev, cvc: 'Invalid cvc' }));\r\n        // Set the validity flag to false\r\n        isValid = false;\r\n      }\r\n    }\r\n\r\n    // If the input is valid, make the API request\r\n    if (isValid) {\r\n      // Get the user's token from the local storage\r\n      const token = localStorage.getItem('token');\r\n\r\n      // Get the payment details based on the method\r\n      let details;\r\n      if (method === 'card') {\r\n        details = card;\r\n      }\r\n\r\n      axios\r\n        .post('/api/pay', { token, method, amount, details })\r\n        .then((res) => {\r\n          // Set the response state\r\n          setResponse(res.data);\r\n        })\r\n        .catch((err) => {\r\n          // Set the error state\r\n          setErrors(err.response.data);\r\n        });\r\n    }\r\n  };\r\n\r\n  // Use the useEffect hook to handle the API response\r\n  useEffect(() => {\r\n    // If the response is successful, redirect to the home page\r\n    if (response) {\r\n      history.push('/');\r\n    }\r\n  }, [response, history]);\r\n\r\n  // Payment.js: This is the React component for the payment form\r\n\r\n// ...\r\n\r\n  // Define the function to handle the card input change\r\n  const handleCardChange = (e) => {\r\n    // Update the card state with the user input\r\n    setCard((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n\r\n    // Validate the card input and show any errors\r\n    // You can use validator or any other module to validate the input\r\n    // For example, validator.isCreditCard(card.number)\r\n    // Check if the card number is a valid credit card number\r\n    if (!validator.isCreditCard(card.number)) {\r\n      // Set the error state for the card number\r\n      setErrors((prev) => ({ ...prev, number: 'Invalid card number' }));\r\n      // Set the validity flag to false\r\n      isValid = false;\r\n    }\r\n    // Check if the expiry month is a valid month number\r\n    if (!validator.isInt(card.exp_month, { min: 1, max: 12 })) {\r\n      // Set the error state for the expiry month\r\n      setErrors((prev) => ({ ...prev, exp_month: 'Invalid expiry month' }));\r\n      // Set the validity flag to false\r\n      isValid = false;\r\n    }\r\n    // Check if the expiry year is a valid year number\r\n    if (!validator.isInt(card.exp_year, { min: 2021, max: 2030 })) {\r\n      // Set the error state for the expiry year\r\n      setErrors((prev) => ({ ...prev, exp_year: 'Invalid expiry year' }));\r\n      // Set the validity flag to false\r\n      isValid = false;\r\n    }\r\n    // Check if the cvc is a valid cvc number\r\n    if (!validator.isInt(card.cvc, { min: 100, max: 999 })) {\r\n      // Set the error state for the cvc\r\n      setErrors((prev) => ({ ...prev, cvc: 'Invalid cvc' }));\r\n      // Set the validity flag to false\r\n      isValid = false;\r\n    }\r\n  };\r\n\r\n  // ...\r\n\r\n  return (\r\n    <div className=\"payment\">\r\n      <h2>Payment</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"method\">Payment Method</label>\r\n          <select\r\n            id=\"method\"\r\n            value={method}\r\n            onChange={(e) => setMethod(e.target.value)}\r\n          >\r\n            <option value=\"\">Select a payment method</option>\r\n            <option value=\"card\">Card</option>\r\n            <option value=\"paypal\">Paypal</option>\r\n            <option value=\"upi\">UPI</option>\r\n          </select>\r\n          {errors.method && <span className=\"error\">{errors.method}</span>}\r\n        </div>\r\n        {method === 'card' && (\r\n          // If the user selects card, show the card input fields\r\n          <div className=\"card-form\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"number\">Card Number</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"number\"\r\n                name=\"number\"\r\n                value={card.number}\r\n                onChange={handleCardChange}\r\n              />\r\n              {errors.number && <span className=\"error\">{errors.number}</span>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exp_month\">Expiry Month</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"exp_month\"\r\n                name=\"exp_month\"\r\n                value={card.exp_month}\r\n                onChange={handleCardChange}\r\n              />\r\n              {errors.exp_month && (\r\n                <span className=\"error\">{errors.exp_month}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exp_year\">Expiry Year</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"exp_year\"\r\n                name=\"exp_year\"\r\n                value={card.exp_year}\r\n                onChange={handleCardChange}\r\n              />\r\n              {errors.exp_year && (\r\n                <span className=\"error\">{errors.exp_year}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"cvc\">CVC</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"cvc\"\r\n                name=\"cvc\"\r\n                value={card.cvc}\r\n                onChange={handleCardChange}\r\n              />\r\n              {errors.cvc && <span className=\"error\">{errors.cvc}</span>}\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"amount\">Payment Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"amount\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            readOnly\r\n          />\r\n          {errors.amount && <span className=\"error\">{errors.amount}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button type=\"submit\">Pay</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}